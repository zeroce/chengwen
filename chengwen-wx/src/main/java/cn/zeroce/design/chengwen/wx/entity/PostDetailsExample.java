package cn.zeroce.design.chengwen.wx.entity;

import java.util.ArrayList;
import java.util.List;

public class PostDetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public PostDetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPostIdIsNull() {
            addCriterion("post_id is null");
            return (Criteria) this;
        }

        public Criteria andPostIdIsNotNull() {
            addCriterion("post_id is not null");
            return (Criteria) this;
        }

        public Criteria andPostIdEqualTo(Integer value) {
            addCriterion("post_id =", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotEqualTo(Integer value) {
            addCriterion("post_id <>", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThan(Integer value) {
            addCriterion("post_id >", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("post_id >=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThan(Integer value) {
            addCriterion("post_id <", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThanOrEqualTo(Integer value) {
            addCriterion("post_id <=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdIn(List<Integer> values) {
            addCriterion("post_id in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotIn(List<Integer> values) {
            addCriterion("post_id not in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdBetween(Integer value1, Integer value2) {
            addCriterion("post_id between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotBetween(Integer value1, Integer value2) {
            addCriterion("post_id not between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andCollectedCountIsNull() {
            addCriterion("collected_count is null");
            return (Criteria) this;
        }

        public Criteria andCollectedCountIsNotNull() {
            addCriterion("collected_count is not null");
            return (Criteria) this;
        }

        public Criteria andCollectedCountEqualTo(Integer value) {
            addCriterion("collected_count =", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountNotEqualTo(Integer value) {
            addCriterion("collected_count <>", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountGreaterThan(Integer value) {
            addCriterion("collected_count >", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("collected_count >=", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountLessThan(Integer value) {
            addCriterion("collected_count <", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountLessThanOrEqualTo(Integer value) {
            addCriterion("collected_count <=", value, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountIn(List<Integer> values) {
            addCriterion("collected_count in", values, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountNotIn(List<Integer> values) {
            addCriterion("collected_count not in", values, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountBetween(Integer value1, Integer value2) {
            addCriterion("collected_count between", value1, value2, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andCollectedCountNotBetween(Integer value1, Integer value2) {
            addCriterion("collected_count not between", value1, value2, "collectedCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountIsNull() {
            addCriterion("thumb_up_count is null");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountIsNotNull() {
            addCriterion("thumb_up_count is not null");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountEqualTo(Integer value) {
            addCriterion("thumb_up_count =", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountNotEqualTo(Integer value) {
            addCriterion("thumb_up_count <>", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountGreaterThan(Integer value) {
            addCriterion("thumb_up_count >", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("thumb_up_count >=", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountLessThan(Integer value) {
            addCriterion("thumb_up_count <", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountLessThanOrEqualTo(Integer value) {
            addCriterion("thumb_up_count <=", value, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountIn(List<Integer> values) {
            addCriterion("thumb_up_count in", values, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountNotIn(List<Integer> values) {
            addCriterion("thumb_up_count not in", values, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountBetween(Integer value1, Integer value2) {
            addCriterion("thumb_up_count between", value1, value2, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbUpCountNotBetween(Integer value1, Integer value2) {
            addCriterion("thumb_up_count not between", value1, value2, "thumbUpCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountIsNull() {
            addCriterion("thumb_down_count is null");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountIsNotNull() {
            addCriterion("thumb_down_count is not null");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountEqualTo(Integer value) {
            addCriterion("thumb_down_count =", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountNotEqualTo(Integer value) {
            addCriterion("thumb_down_count <>", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountGreaterThan(Integer value) {
            addCriterion("thumb_down_count >", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("thumb_down_count >=", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountLessThan(Integer value) {
            addCriterion("thumb_down_count <", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountLessThanOrEqualTo(Integer value) {
            addCriterion("thumb_down_count <=", value, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountIn(List<Integer> values) {
            addCriterion("thumb_down_count in", values, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountNotIn(List<Integer> values) {
            addCriterion("thumb_down_count not in", values, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountBetween(Integer value1, Integer value2) {
            addCriterion("thumb_down_count between", value1, value2, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andThumbDownCountNotBetween(Integer value1, Integer value2) {
            addCriterion("thumb_down_count not between", value1, value2, "thumbDownCount");
            return (Criteria) this;
        }

        public Criteria andViewCountIsNull() {
            addCriterion("view_count is null");
            return (Criteria) this;
        }

        public Criteria andViewCountIsNotNull() {
            addCriterion("view_count is not null");
            return (Criteria) this;
        }

        public Criteria andViewCountEqualTo(Integer value) {
            addCriterion("view_count =", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountNotEqualTo(Integer value) {
            addCriterion("view_count <>", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountGreaterThan(Integer value) {
            addCriterion("view_count >", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("view_count >=", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountLessThan(Integer value) {
            addCriterion("view_count <", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountLessThanOrEqualTo(Integer value) {
            addCriterion("view_count <=", value, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountIn(List<Integer> values) {
            addCriterion("view_count in", values, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountNotIn(List<Integer> values) {
            addCriterion("view_count not in", values, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountBetween(Integer value1, Integer value2) {
            addCriterion("view_count between", value1, value2, "viewCount");
            return (Criteria) this;
        }

        public Criteria andViewCountNotBetween(Integer value1, Integer value2) {
            addCriterion("view_count not between", value1, value2, "viewCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_details
     *
     * @mbg.generated do_not_delete_during_merge Fri May 15 11:34:03 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_details
     *
     * @mbg.generated Fri May 15 11:34:03 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}