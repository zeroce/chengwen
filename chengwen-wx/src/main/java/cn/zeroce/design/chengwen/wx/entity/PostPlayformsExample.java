package cn.zeroce.design.chengwen.wx.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PostPlayformsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public PostPlayformsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyIsNull() {
            addCriterion("playform_key is null");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyIsNotNull() {
            addCriterion("playform_key is not null");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyEqualTo(String value) {
            addCriterion("playform_key =", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyNotEqualTo(String value) {
            addCriterion("playform_key <>", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyGreaterThan(String value) {
            addCriterion("playform_key >", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyGreaterThanOrEqualTo(String value) {
            addCriterion("playform_key >=", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyLessThan(String value) {
            addCriterion("playform_key <", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyLessThanOrEqualTo(String value) {
            addCriterion("playform_key <=", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyLike(String value) {
            addCriterion("playform_key like", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyNotLike(String value) {
            addCriterion("playform_key not like", value, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyIn(List<String> values) {
            addCriterion("playform_key in", values, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyNotIn(List<String> values) {
            addCriterion("playform_key not in", values, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyBetween(String value1, String value2) {
            addCriterion("playform_key between", value1, value2, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformKeyNotBetween(String value1, String value2) {
            addCriterion("playform_key not between", value1, value2, "playformKey");
            return (Criteria) this;
        }

        public Criteria andPlayformNameIsNull() {
            addCriterion("playform_name is null");
            return (Criteria) this;
        }

        public Criteria andPlayformNameIsNotNull() {
            addCriterion("playform_name is not null");
            return (Criteria) this;
        }

        public Criteria andPlayformNameEqualTo(String value) {
            addCriterion("playform_name =", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameNotEqualTo(String value) {
            addCriterion("playform_name <>", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameGreaterThan(String value) {
            addCriterion("playform_name >", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameGreaterThanOrEqualTo(String value) {
            addCriterion("playform_name >=", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameLessThan(String value) {
            addCriterion("playform_name <", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameLessThanOrEqualTo(String value) {
            addCriterion("playform_name <=", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameLike(String value) {
            addCriterion("playform_name like", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameNotLike(String value) {
            addCriterion("playform_name not like", value, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameIn(List<String> values) {
            addCriterion("playform_name in", values, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameNotIn(List<String> values) {
            addCriterion("playform_name not in", values, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameBetween(String value1, String value2) {
            addCriterion("playform_name between", value1, value2, "playformName");
            return (Criteria) this;
        }

        public Criteria andPlayformNameNotBetween(String value1, String value2) {
            addCriterion("playform_name not between", value1, value2, "playformName");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeIsNull() {
            addCriterion("modified_time is null");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeIsNotNull() {
            addCriterion("modified_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeEqualTo(Date value) {
            addCriterionForJDBCDate("modified_time =", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("modified_time <>", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("modified_time >", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("modified_time >=", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeLessThan(Date value) {
            addCriterionForJDBCDate("modified_time <", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("modified_time <=", value, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeIn(List<Date> values) {
            addCriterionForJDBCDate("modified_time in", values, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("modified_time not in", values, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("modified_time between", value1, value2, "modifiedTime");
            return (Criteria) this;
        }

        public Criteria andModifiedTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("modified_time not between", value1, value2, "modifiedTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_playforms
     *
     * @mbg.generated do_not_delete_during_merge Fri Apr 17 18:10:52 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table post_playforms
     *
     * @mbg.generated Fri Apr 17 18:10:52 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}